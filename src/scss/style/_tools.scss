@use "sass:math";
// TO %
@function prc($pxOne, $pxTwo) {
  $result: math.div($pxOne, $pxTwo) * 100%;
  @return $result;
}

// TO REM
@function rem($px) {
  $result: math.div($px, 16) + rem;
  @return $result;
}

// TO EM
@function em($px) {
  $result: math.div($px, 16) + em;
  @return $result;
}

//Адаптивное свойство
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type == 1 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidhtContainer+px}) {
      #{$property}: calc(#{$minSize+px} + #{$addSize} * ((100vw - 320px) / #{$maxWidhtContainer - 320}));
    }
  }
  @else if $type == 2 {
    // Только если больше контейнера
    #{$property}: $startSize + px;
    @media (min-width:#{$maxWidhtContainer+px}) {
      #{$property}: calc(#{$minSize+px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }
  @else {
    // Всегда
    #{$property}: calc(#{$minSize+px}+ #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

@mixin AdaptivValue($property, $startSize, $minSize, $maxW, $minWidth) {
  $addSize: $startSize - $minSize;
  #{$property}: $startSize + px;
  @media (min-width: #{$minWidth + px}) and (max-width: #{$maxW + px}) {
    #{$property}: calc(#{$minSize+px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxW - $minWidth}));
  }
  @media (max-width: #{$minWidth + px}) {
    #{$property}: $minSize + px;
  }
}

// Псевдо элементы
@mixin pseudo($display: block, $pos: absolute, $content: ''){
  content: $content;
  display: $display;
  position: $pos;
}